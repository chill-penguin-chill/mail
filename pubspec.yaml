name: mail
description: "Atomic Mail app"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 0.0.2+3

environment:
  sdk: ">=3.3.2 <4.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter

  flutter_age:
    git:
      url: https://github.com/atomic-blend/flutter_age.git
      ref: v0.0.5
  ab_shared:
    # git:
    #   url: https://github.com/atomic-blend/app-shared.git
    #   ref: v0.2.1
    path: ../ab_shared


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  freezed_annotation: ^2.4.4
  freezed: ^2.5.7
  injectable: ^2.5.0
  json_serializable: ^6.9.0
  json_annotation: ^4.9.0
  dio: ^5.7.0
  flutter_bloc: ^9.1.1
  hydrated_bloc: ^10.1.1
  equatable: ^2.0.7
  pretty_dio_logger: ^1.4.0
  json_store: ^2.0.0
  icons_plus: ^5.0.0
  slang: ^4.4.0
  slang_flutter: ^4.4.0
  path_provider: ^2.1.5
  shared_preferences: ^2.3.5
  flex_color_scheme: ^8.1.0
  flutter_svg: ^2.0.16
  auto_size_text: ^3.0.0
  pointycastle: ^3.9.1
  jiffy: ^6.3.2
  flutter_popup: ^3.3.0
  flutter_slidable: ^4.0.0
  rename_app: ^1.6.1
  flutter_native_splash: ^2.4.4
  lottie: ^3.3.1
  flutter_animate: ^4.5.2
  calendar_date_picker2: ^1.1.9
  random_avatar: ^0.0.8
  unique_name_generator: ^1.0.0
  collection: ^1.19.0
  bip39: ^1.0.6
  flutter_layout_grid: ^2.0.7
  animated_toggle_switch: ^0.8.4
  firebase_messaging: ^15.2.5
  firebase_core: ^3.12.1
  device_info_plus: ^11.3.3
  flutter_local_notifications: ^19.0.0
  flutter_timezone: ^4.1.0
  device_calendar: ^4.3.3
  url_launcher: ^6.3.1
  input_quantity: ^2.5.1
  flutter_multi_select_items: ^0.4.3
  emoji_picker_flutter: ^4.3.0
  syncfusion_flutter_datepicker: ^30.2.5
  flutter_heatmap_calendar: ^1.0.5
  percent_indicator: ^4.2.5
  flex_color_picker: ^3.7.0
  sentry_flutter: ^9.6.0
  macos_window_utils: ^1.7.1
  sizer: ^3.0.0
  flutter_staggered_grid_view: ^0.7.0
  fleather: ^1.22.0
  flutter_keyboard_visibility: ^6.0.0
  flutter_side_menu: ^0.5.41
  timezone: ^0.10.0
  async: ^2.12.0
  qr_flutter: ^4.1.0
  objectid: ^4.0.1
  toastification: ^3.0.3
dependency_overrides:
  flutter_secure_storage_web: ^2.0.0
  flutter_secure_storage_platform_interface: ^2.0.1
  timezone: 0.10.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0
  flutter_flavorizr: ^2.2.3
  build_runner: ^2.4.14
  slang_build_runner: ^4.4.0
  flutter_launcher_icons: ^0.14.3

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  assets:
    - assets/configs/
    - assets/images/
    - assets/animations/
    # ignore
    - pkg/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
  fonts:
    - family: Nunito
      fonts:
        - asset: fonts/nunito/Nunito-Regular.ttf
        - asset: fonts/nunito/Nunito-Italic.ttf
          style: italic
        - asset: fonts/nunito/Nunito-Light.ttf
          weight: 300
        - asset: fonts/nunito/Nunito-LightItalic.ttf
          weight: 300
          style: italic
        - asset: fonts/nunito/Nunito-Medium.ttf
          weight: 500
        - asset: fonts/nunito/Nunito-MediumItalic.ttf
          weight: 500
          style: italic
        - asset: fonts/nunito/Nunito-SemiBold.ttf
          weight: 600
        - asset: fonts/nunito/Nunito-SemiBoldItalic.ttf
          weight: 600
          style: italic
        - asset: fonts/nunito/Nunito-Bold.ttf
          weight: 700
        - asset: fonts/nunito/Nunito-BoldItalic.ttf
          weight: 700
          style: italic
        - asset: fonts/nunito/Nunito-ExtraBold.ttf
          weight: 800
        - asset: fonts/nunito/Nunito-ExtraBoldItalic.ttf
          weight: 800
          style: italic
        - asset: fonts/nunito/Nunito-Black.ttf
          weight: 900
        - asset: fonts/nunito/Nunito-BlackItalic.ttf
          weight: 900
          style: italic
        - asset: fonts/nunito/Nunito-ExtraLight.ttf
          weight: 200
        - asset: fonts/nunito/Nunito-ExtraLightItalic.ttf
          weight: 200
          style: italic
    - family: SpaceGrotesk
      fonts:
        - asset: fonts/space-grotesk/SpaceGrotesk-Light.ttf
        - asset: fonts/space-grotesk/SpaceGrotesk-Regular.ttf
          weight: 300
        - asset: fonts/space-grotesk/SpaceGrotesk-Medium.ttf
          weight: 500
        - asset: fonts/space-grotesk/SpaceGrotesk-SemiBold.ttf
          weight: 600
        - asset: fonts/space-grotesk/SpaceGrotesk-Bold.ttf
          weight: 700

flutter_launcher_icons:
  android: true
  ios: true
  remove_alpha_ios: true
  image_path: "assets/images/appicon.png"
  min_sdk_android: 21 # android min sdk min:16, default 21
  web:
    generate: true
    image_path: "assets/images/appicon.png"
    background_color: "#FFFFFF"
    theme_color: "#FFFFFF"
  windows:
    generate: true
    image_path: "assets/images/appicon.png"
    icon_size: 48 # min:48, max:256, default: 48
  macos:
    generate: true
    image_path: "assets/images/appicon.png"

flutter_native_splash:
  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # dart run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # dart run flutter_native_splash:remove

  # IMPORTANT NOTE: These parameter do not affect the configuration of Android 12 and later, which
  # handle splash screens differently that prior versions of Android.  Android 12 and later must be
  # configured specifically in the android_12 section below.

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  color: "#F8F8F8"
  #background_image: "assets/background.png"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file and should be sized for 4x pixel density.
  image: assets/images/appicon_transparent.png

  # The branding property allows you to specify an image used as branding in the splash screen.
  # It must be a png file. It is supported for Android, iOS and the Web.  For Android 12,
  # see the Android 12 section below.
  #branding: assets/dart.png

  # To position the branding image at the bottom of the screen you can use bottom, bottomRight,
  # and bottomLeft. The default values is bottom if not specified or specified something else.
  #branding_mode: bottom

  # Set the branding padding from the bottom of the screen.  The default value is 0
  # branding_bottom_padding: 24

  # The color_dark, background_image_dark, image_dark, branding_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above.  If there is no parameter above, the app will use the light mode values.
  # If the image_dark parameter is specified, color_dark or background_image_dark must be specified.
  # color_dark and background_image_dark cannot both be set.
  #color_dark: "#042a49"
  #background_image_dark: "assets/dark-background.png"
  #image_dark: assets/splash-invert.png
  #branding_dark: assets/dart_dark.png

  # From Android 12 onwards, the splash screen is handled differently than in previous versions.
  # Please visit https://developer.android.com/guide/topics/ui/splash-screen
  # Following are specific parameters for Android 12+.
  android_12:
    # The image parameter sets the splash screen icon image.  If this parameter is not specified,
    # the app's launcher icon will be used instead.
    # Please note that the splash screen will be clipped to a circle on the center of the screen.
    # App icon with an icon background: This should be 960×960 pixels, and fit within a circle
    # 640 pixels in diameter.
    # App icon without an icon background: This should be 1152×1152 pixels, and fit within a circle
    # 768 pixels in diameter.  To fit a 1152x1152 image within a circle with a 768 diameter, simply
    # ensure that the most important design elements of your image are placed within a circular area
    # with a 768 diameter at the center of the 1152x1152 canvas.
    image: assets/images/appicon_transparent.png

    # Splash screen background color.
    color: "#F8F8F8"

    # App icon background color.
    #icon_background_color: "#111111"

    # The branding property allows you to specify an image used as branding in the splash screen.
    #branding: assets/dart.png

    # The image_dark, color_dark, icon_background_color_dark, and branding_dark set values that
    # apply when the device is in dark mode. If they are not specified, the app will use the
    # parameters from above.  If there is no parameter above, the app will use the light mode values.
    #image_dark: assets/android12splash-invert.png
    #color_dark: "#042a49"
    #icon_background_color_dark: "#eeeeee"

  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  #android: false
  #ios: false
  #web: false

  # Platform specific images can be specified with the following parameters, which will override
  # the respective parameter.  You may specify all, selected, or none of these parameters:
  #color_android: "#42a5f5"
  #color_dark_android: "#042a49"
  #color_ios: "#42a5f5"
  #color_dark_ios: "#042a49"
  #color_web: "#42a5f5"
  #color_dark_web: "#042a49"
  #image_android: assets/splash-android.png
  #image_dark_android: assets/splash-invert-android.png
  #image_ios: assets/splash-ios.png
  #image_dark_ios: assets/splash-invert-ios.png
  #image_web: assets/splash-web.gif
  #image_dark_web: assets/splash-invert-web.gif
  #background_image_android: "assets/background-android.png"
  #background_image_dark_android: "assets/dark-background-android.png"
  #background_image_ios: "assets/background-ios.png"
  #background_image_dark_ios: "assets/dark-background-ios.png"
  #background_image_web: "assets/background-web.png"
  #background_image_dark_web: "assets/dark-background-web.png"
  #branding_android: assets/brand-android.png
  #branding_bottom_padding_android: 24
  #branding_dark_android: assets/dart_dark-android.png
  #branding_ios: assets/brand-ios.png
  #branding_bottom_padding_ios: 24
  #branding_dark_ios: assets/dart_dark-ios.png
  #branding_web: assets/brand-web.gif
  #branding_dark_web: assets/dart_dark-web.gif

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # The screen orientation can be set in Android with the android_screen_orientation parameter.
  # Valid parameters can be found here:
  # https://developer.android.com/guide/topics/manifest/activity-element#screen
  #android_screen_orientation: sensorLandscape

  # To hide the notification bar, use the fullscreen parameter.  Has no effect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIMode(SystemUiMode.manual, overlays: [SystemUiOverlay.bottom, SystemUiOverlay.top], );
  #fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'
